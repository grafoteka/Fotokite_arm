<?xml version="1.0"?>
<launch>
  
    <!--arg name="robot_model"  default="summit_xl_std.urdf.xacro"/-->
    <!--arg name="robot_model"  default="fotokite_3_modules.urdf.xacro"/-->
    <arg name="robot_model"  default="robot.xacro"/>
    <arg name="x" default="2.0"/>
    <arg name="y" default="0.0"/>
    <arg name="z" default="0.0"/>

    <!-- Load the URDF into ROS parameter server -->
    <!--arg name="urdf_file" default="$(find xacro)/xacro '$(find summit_xl_description)/robots/$(arg robot_model)' inorder" /-->
    <arg name="urdf_file" default="$(find xacro)/xacro '$(find fotokite_description)/urdf/$(arg robot_model)' --inorder" />
    <param name="robot_description" command="$(arg urdf_file)" />

    <!-- send fake joint values -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <!--param name="use_gui" value="FALSE"/-->
    <remap from="/joint_states" to="/fotokite/joint_states" />
    </node>

    <!-- convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

    <!-- Gazebo -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find fotokite_gazebo)/worlds/crasar_complete.world"/>
    </include>

    <!-- Spawn a robot into Gazebo -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
          args="-param robot_description
                -urdf
                -x '$(arg x)'
                -y '$(arg y)'
                -z '$(arg z)'
                -model fotokite"/>

<!-- launch files -->
<include file="$(find fotokite_control)/launch/fotokite_control.launch"/>


</launch>

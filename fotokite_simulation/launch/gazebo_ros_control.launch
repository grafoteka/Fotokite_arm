<launch>
    <arg name="run_trajectory" default="true"/>

    <arg name="x" default="2.0"/>
    <arg name="y" default="0.0"/>
    <arg name="z" default="0.0"/>

    <!-- these are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>

    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find fotokite_gazebo)/worlds/crasar_complete.world"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    </include>

    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find fotokite_description)/robots/robot.xacro'"/>

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="  -param robot_description
            -urdf
            -x '$(arg x)'
            -y '$(arg y)'
            -z '$(arg z)'
            -model fotokite"/>

    <include file="$(find fotokite_description)/launch/start_simulation_control.launch">
        <arg name="run_trajectory" value="$(arg run_trajectory)"/>
    </include>
</launch>
